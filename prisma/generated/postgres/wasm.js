
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  name: 'name',
  phone: 'phone',
  nationalId: 'nationalId',
  address: 'address',
  status: 'status',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.UnitScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  unitType: 'unitType',
  area: 'area',
  floor: 'floor',
  building: 'building',
  totalPrice: 'totalPrice',
  status: 'status',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.PartnerScalarFieldEnum = {
  id: 'id',
  name: 'name',
  phone: 'phone',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.UnitPartnerScalarFieldEnum = {
  id: 'id',
  unitId: 'unitId',
  partnerId: 'partnerId',
  percentage: 'percentage',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.ContractScalarFieldEnum = {
  id: 'id',
  unitId: 'unitId',
  customerId: 'customerId',
  start: 'start',
  totalPrice: 'totalPrice',
  discountAmount: 'discountAmount',
  brokerName: 'brokerName',
  brokerPercent: 'brokerPercent',
  brokerAmount: 'brokerAmount',
  commissionSafeId: 'commissionSafeId',
  downPaymentSafeId: 'downPaymentSafeId',
  maintenanceDeposit: 'maintenanceDeposit',
  installmentType: 'installmentType',
  installmentCount: 'installmentCount',
  extraAnnual: 'extraAnnual',
  annualPaymentValue: 'annualPaymentValue',
  downPayment: 'downPayment',
  paymentType: 'paymentType',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.InstallmentScalarFieldEnum = {
  id: 'id',
  unitId: 'unitId',
  amount: 'amount',
  dueDate: 'dueDate',
  status: 'status',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.PartnerDebtScalarFieldEnum = {
  id: 'id',
  partnerId: 'partnerId',
  amount: 'amount',
  dueDate: 'dueDate',
  status: 'status',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.SafeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  balance: 'balance',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.TransferScalarFieldEnum = {
  id: 'id',
  fromSafeId: 'fromSafeId',
  toSafeId: 'toSafeId',
  amount: 'amount',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.VoucherScalarFieldEnum = {
  id: 'id',
  type: 'type',
  date: 'date',
  amount: 'amount',
  safeId: 'safeId',
  description: 'description',
  payer: 'payer',
  beneficiary: 'beneficiary',
  linkedRef: 'linkedRef',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.BrokerScalarFieldEnum = {
  id: 'id',
  name: 'name',
  phone: 'phone',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.BrokerDueScalarFieldEnum = {
  id: 'id',
  brokerId: 'brokerId',
  amount: 'amount',
  dueDate: 'dueDate',
  status: 'status',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.PartnerGroupScalarFieldEnum = {
  id: 'id',
  name: 'name',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.PartnerGroupPartnerScalarFieldEnum = {
  id: 'id',
  partnerGroupId: 'partnerGroupId',
  partnerId: 'partnerId',
  percentage: 'percentage',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.UnitPartnerGroupScalarFieldEnum = {
  id: 'id',
  unitId: 'unitId',
  partnerGroupId: 'partnerGroupId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  action: 'action',
  entityType: 'entityType',
  entityId: 'entityId',
  oldValues: 'oldValues',
  newValues: 'newValues',
  userId: 'userId',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  createdAt: 'createdAt'
};

exports.Prisma.SettingsScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value'
};

exports.Prisma.KeyValScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  email: 'email',
  name: 'name',
  role: 'role',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  type: 'type',
  title: 'title',
  message: 'message',
  category: 'category',
  acknowledged: 'acknowledged',
  acknowledgedAt: 'acknowledgedAt',
  acknowledgedBy: 'acknowledgedBy',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt',
  data: 'data'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Customer: 'Customer',
  Unit: 'Unit',
  Partner: 'Partner',
  UnitPartner: 'UnitPartner',
  Contract: 'Contract',
  Installment: 'Installment',
  PartnerDebt: 'PartnerDebt',
  Safe: 'Safe',
  Transfer: 'Transfer',
  Voucher: 'Voucher',
  Broker: 'Broker',
  BrokerDue: 'BrokerDue',
  PartnerGroup: 'PartnerGroup',
  PartnerGroupPartner: 'PartnerGroupPartner',
  UnitPartnerGroup: 'UnitPartnerGroup',
  AuditLog: 'AuditLog',
  Settings: 'Settings',
  KeyVal: 'KeyVal',
  User: 'User',
  Notification: 'Notification'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "G:\\goo\\Real - Copy\\prisma\\generated\\postgres",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "G:\\goo\\Real - Copy\\prisma\\postgres.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../prisma/generated/postgres\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// Customers - مطابق لـ golden-dataset.json\nmodel Customer {\n  id         String    @id @default(cuid())\n  name       String\n  phone      String?   @unique\n  nationalId String?   @unique\n  address    String?\n  status     String    @default(\"نشط\")\n  notes      String?\n  createdAt  DateTime  @default(now())\n  updatedAt  DateTime  @updatedAt\n  deletedAt  DateTime?\n\n  // Relations\n  contracts Contract[]\n\n  // Performance indexes for frequently queried columns\n  @@index([status, deletedAt]) // For filtering active customers\n  @@index([name]) // For name searches\n  @@index([phone]) // For phone lookups\n  @@index([createdAt]) // For date-based queries\n  @@map(\"customers\")\n}\n\n// Units - مطابق لـ golden-dataset.json\nmodel Unit {\n  id         String    @id @default(cuid())\n  code       String    @unique\n  name       String?\n  unitType   String    @default(\"سكني\")\n  area       String?\n  floor      String?\n  building   String?\n  totalPrice Float     @default(0)\n  status     String    @default(\"متاحة\")\n  notes      String?\n  createdAt  DateTime  @default(now())\n  updatedAt  DateTime  @updatedAt\n  deletedAt  DateTime?\n\n  // Relations\n  contracts         Contract[]\n  installments      Installment[]\n  vouchers          Voucher[]\n  unitPartners      UnitPartner[]\n  unitPartnerGroups UnitPartnerGroup[]\n\n  // Performance indexes for frequently queried columns\n  @@index([status, deletedAt]) // For filtering available units\n  @@index([unitType, deletedAt]) // For filtering by type\n  @@index([totalPrice]) // For price range queries\n  @@index([createdAt]) // For date-based queries\n  @@index([code]) // For code lookups\n  @@map(\"units\")\n}\n\n// Partners - مطابق لـ golden-dataset.json\nmodel Partner {\n  id        String    @id @default(cuid())\n  name      String\n  phone     String?\n  notes     String?\n  createdAt DateTime  @default(now())\n  updatedAt DateTime  @updatedAt\n  deletedAt DateTime?\n\n  // Relations\n  unitPartners         UnitPartner[]\n  partnerDebts         PartnerDebt[]\n  partnerGroupPartners PartnerGroupPartner[]\n\n  // Performance indexes\n  @@index([name]) // For name searches\n  @@index([phone]) // For phone lookups\n  @@index([deletedAt]) // For filtering active partners\n  @@map(\"partners\")\n}\n\n// UnitPartners - مطابق لـ golden-dataset.json\nmodel UnitPartner {\n  id         String    @id @default(cuid())\n  unitId     String\n  partnerId  String\n  percentage Float\n  createdAt  DateTime  @default(now())\n  updatedAt  DateTime  @updatedAt\n  deletedAt  DateTime?\n\n  // Relations\n  unit    Unit    @relation(fields: [unitId], references: [id], onDelete: Cascade)\n  partner Partner @relation(fields: [partnerId], references: [id], onDelete: Cascade)\n\n  @@unique([unitId, partnerId])\n  // Performance indexes\n  @@index([unitId, deletedAt]) // For unit partner lookups\n  @@index([partnerId, deletedAt]) // For partner unit lookups\n  @@map(\"unit_partners\")\n}\n\n// Contracts - مطابق لـ golden-dataset.json\nmodel Contract {\n  id                 String    @id @default(cuid())\n  unitId             String\n  customerId         String\n  start              DateTime\n  totalPrice         Float\n  discountAmount     Float     @default(0)\n  brokerName         String?\n  brokerPercent      Float     @default(0)\n  brokerAmount       Float     @default(0)\n  commissionSafeId   String?\n  downPaymentSafeId  String?\n  maintenanceDeposit Float     @default(0)\n  installmentType    String    @default(\"شهري\")\n  installmentCount   Int       @default(0)\n  extraAnnual        Int       @default(0)\n  annualPaymentValue Float     @default(0)\n  downPayment        Float     @default(0)\n  paymentType        String    @default(\"installment\")\n  createdAt          DateTime  @default(now())\n  updatedAt          DateTime  @updatedAt\n  deletedAt          DateTime?\n\n  // Relations\n  unit     Unit     @relation(fields: [unitId], references: [id], onDelete: Cascade)\n  customer Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)\n\n  // Performance indexes\n  @@index([unitId, deletedAt]) // For unit contract lookups\n  @@index([customerId, deletedAt]) // For customer contract lookups\n  @@index([start]) // For date range queries\n  @@index([totalPrice]) // For price range queries\n  @@index([createdAt]) // For date-based queries\n  @@map(\"contracts\")\n}\n\n// Installments - مطابق لـ golden-dataset.json\nmodel Installment {\n  id        String    @id @default(cuid())\n  unitId    String\n  amount    Float\n  dueDate   DateTime\n  status    String    @default(\"معلق\")\n  notes     String?\n  createdAt DateTime  @default(now())\n  updatedAt DateTime  @updatedAt\n  deletedAt DateTime?\n\n  // Relations\n  unit Unit @relation(fields: [unitId], references: [id], onDelete: Cascade)\n\n  // Performance indexes\n  @@index([unitId, deletedAt]) // For unit installment lookups\n  @@index([status, deletedAt]) // For status filtering\n  @@index([dueDate]) // For date range queries\n  @@index([amount]) // For amount range queries\n  @@map(\"installments\")\n}\n\n// PartnerDebts - مطابق لـ golden-dataset.json\nmodel PartnerDebt {\n  id        String    @id @default(cuid())\n  partnerId String\n  amount    Float\n  dueDate   DateTime\n  status    String    @default(\"معلق\")\n  notes     String?\n  createdAt DateTime  @default(now())\n  updatedAt DateTime  @updatedAt\n  deletedAt DateTime?\n\n  // Relations\n  partner Partner @relation(fields: [partnerId], references: [id], onDelete: Cascade)\n\n  @@map(\"partner_debts\")\n}\n\n// Safes - مطابق لـ golden-dataset.json\nmodel Safe {\n  id        String    @id @default(cuid())\n  name      String    @unique\n  balance   Float     @default(0)\n  createdAt DateTime  @default(now())\n  updatedAt DateTime  @updatedAt\n  deletedAt DateTime?\n\n  // Relations\n  vouchers      Voucher[]\n  transfersFrom Transfer[] @relation(\"TransferFrom\")\n  transfersTo   Transfer[] @relation(\"TransferTo\")\n\n  @@map(\"safes\")\n}\n\n// Transfers - مطابق لـ golden-dataset.json\nmodel Transfer {\n  id          String    @id @default(cuid())\n  fromSafeId  String\n  toSafeId    String\n  amount      Float\n  description String?\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  deletedAt   DateTime?\n\n  // Relations\n  fromSafe Safe @relation(\"TransferFrom\", fields: [fromSafeId], references: [id], onDelete: Cascade)\n  toSafe   Safe @relation(\"TransferTo\", fields: [toSafeId], references: [id], onDelete: Cascade)\n\n  @@map(\"transfers\")\n}\n\n// Vouchers - مطابق لـ golden-dataset.json\nmodel Voucher {\n  id          String    @id @default(cuid())\n  type        String // receipt or payment\n  date        DateTime\n  amount      Float\n  safeId      String\n  description String\n  payer       String?\n  beneficiary String?\n  linkedRef   String? // Reference to unit, contract, etc.\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  deletedAt   DateTime?\n\n  // Relations\n  safe Safe  @relation(fields: [safeId], references: [id], onDelete: Cascade)\n  unit Unit? @relation(fields: [linkedRef], references: [id], onDelete: SetNull)\n\n  @@map(\"vouchers\")\n}\n\n// Brokers - مطابق لـ golden-dataset.json\nmodel Broker {\n  id        String    @id @default(cuid())\n  name      String    @unique\n  phone     String?\n  notes     String?\n  createdAt DateTime  @default(now())\n  updatedAt DateTime  @updatedAt\n  deletedAt DateTime?\n\n  // Relations\n  brokerDues BrokerDue[]\n\n  @@map(\"brokers\")\n}\n\n// BrokerDues - مطابق لـ golden-dataset.json\nmodel BrokerDue {\n  id        String    @id @default(cuid())\n  brokerId  String\n  amount    Float\n  dueDate   DateTime\n  status    String    @default(\"معلق\")\n  notes     String?\n  createdAt DateTime  @default(now())\n  updatedAt DateTime  @updatedAt\n  deletedAt DateTime?\n\n  // Relations\n  broker Broker @relation(fields: [brokerId], references: [id], onDelete: Cascade)\n\n  @@map(\"broker_dues\")\n}\n\n// PartnerGroups - مطابق لـ golden-dataset.json\nmodel PartnerGroup {\n  id        String    @id @default(cuid())\n  name      String    @unique\n  notes     String?\n  createdAt DateTime  @default(now())\n  updatedAt DateTime  @updatedAt\n  deletedAt DateTime?\n\n  // Relations\n  partners          PartnerGroupPartner[]\n  unitPartnerGroups UnitPartnerGroup[]\n\n  @@map(\"partner_groups\")\n}\n\n// PartnerGroupPartner - ربط الشركاء بالمجموعات\nmodel PartnerGroupPartner {\n  id             String    @id @default(cuid())\n  partnerGroupId String\n  partnerId      String\n  percentage     Float\n  createdAt      DateTime  @default(now())\n  updatedAt      DateTime  @updatedAt\n  deletedAt      DateTime?\n\n  // Relations\n  partnerGroup PartnerGroup @relation(fields: [partnerGroupId], references: [id], onDelete: Cascade)\n  partner      Partner      @relation(fields: [partnerId], references: [id], onDelete: Cascade)\n\n  @@unique([partnerGroupId, partnerId])\n  @@map(\"partner_group_partners\")\n}\n\n// UnitPartnerGroup - ربط الوحدات بمجموعات الشركاء\nmodel UnitPartnerGroup {\n  id             String    @id @default(cuid())\n  unitId         String\n  partnerGroupId String\n  createdAt      DateTime  @default(now())\n  updatedAt      DateTime  @updatedAt\n  deletedAt      DateTime?\n\n  // Relations\n  unit         Unit         @relation(fields: [unitId], references: [id], onDelete: Cascade)\n  partnerGroup PartnerGroup @relation(fields: [partnerGroupId], references: [id], onDelete: Cascade)\n\n  @@unique([unitId, partnerGroupId])\n  @@map(\"unit_partner_groups\")\n}\n\n// AuditLog - مطابق لـ golden-dataset.json\nmodel AuditLog {\n  id         String   @id @default(cuid())\n  action     String\n  entityType String\n  entityId   String\n  oldValues  String? // JSON string\n  newValues  String? // JSON string\n  userId     String?\n  ipAddress  String?\n  userAgent  String?\n  createdAt  DateTime @default(now())\n\n  @@map(\"audit_logs\")\n}\n\n// Settings - مطابق لـ golden-dataset.json\nmodel Settings {\n  id    String @id @default(cuid())\n  key   String @unique\n  value String\n\n  @@map(\"settings\")\n}\n\n// KeyVal - مطابق لـ golden-dataset.json\nmodel KeyVal {\n  id    String @id @default(cuid())\n  key   String @unique\n  value String\n\n  @@map(\"keyval\")\n}\n\n// Users - للمصادقة\nmodel User {\n  id        String   @id @default(cuid())\n  username  String   @unique\n  password  String\n  email     String?  @unique\n  name      String?\n  role      String   @default(\"admin\")\n  isActive  Boolean  @default(true)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"users\")\n}\n\n// Notifications - للنوتيفيكيشن\nmodel Notification {\n  id             String    @id @default(cuid())\n  type           String // critical, important, info\n  title          String\n  message        String\n  category       String\n  acknowledged   Boolean   @default(false)\n  acknowledgedAt DateTime?\n  acknowledgedBy String?\n  createdAt      DateTime  @default(now())\n  expiresAt      DateTime?\n  data           String? // JSON string\n\n  @@map(\"notifications\")\n}\n",
  "inlineSchemaHash": "e0f8211808d225e7f4a886e383bee74e87d57a1861650a2ee4a9a41a054109be",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Customer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nationalId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"contracts\",\"kind\":\"object\",\"type\":\"Contract\",\"relationName\":\"ContractToCustomer\"}],\"dbName\":\"customers\"},\"Unit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unitType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"area\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"floor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"building\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"contracts\",\"kind\":\"object\",\"type\":\"Contract\",\"relationName\":\"ContractToUnit\"},{\"name\":\"installments\",\"kind\":\"object\",\"type\":\"Installment\",\"relationName\":\"InstallmentToUnit\"},{\"name\":\"vouchers\",\"kind\":\"object\",\"type\":\"Voucher\",\"relationName\":\"UnitToVoucher\"},{\"name\":\"unitPartners\",\"kind\":\"object\",\"type\":\"UnitPartner\",\"relationName\":\"UnitToUnitPartner\"},{\"name\":\"unitPartnerGroups\",\"kind\":\"object\",\"type\":\"UnitPartnerGroup\",\"relationName\":\"UnitToUnitPartnerGroup\"}],\"dbName\":\"units\"},\"Partner\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"unitPartners\",\"kind\":\"object\",\"type\":\"UnitPartner\",\"relationName\":\"PartnerToUnitPartner\"},{\"name\":\"partnerDebts\",\"kind\":\"object\",\"type\":\"PartnerDebt\",\"relationName\":\"PartnerToPartnerDebt\"},{\"name\":\"partnerGroupPartners\",\"kind\":\"object\",\"type\":\"PartnerGroupPartner\",\"relationName\":\"PartnerToPartnerGroupPartner\"}],\"dbName\":\"partners\"},\"UnitPartner\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"partnerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"percentage\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"unit\",\"kind\":\"object\",\"type\":\"Unit\",\"relationName\":\"UnitToUnitPartner\"},{\"name\":\"partner\",\"kind\":\"object\",\"type\":\"Partner\",\"relationName\":\"PartnerToUnitPartner\"}],\"dbName\":\"unit_partners\"},\"Contract\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"start\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"discountAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"brokerName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brokerPercent\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"brokerAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"commissionSafeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"downPaymentSafeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maintenanceDeposit\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"installmentType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"installmentCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"extraAnnual\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"annualPaymentValue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"downPayment\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"paymentType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"unit\",\"kind\":\"object\",\"type\":\"Unit\",\"relationName\":\"ContractToUnit\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"ContractToCustomer\"}],\"dbName\":\"contracts\"},\"Installment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"unit\",\"kind\":\"object\",\"type\":\"Unit\",\"relationName\":\"InstallmentToUnit\"}],\"dbName\":\"installments\"},\"PartnerDebt\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"partnerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"partner\",\"kind\":\"object\",\"type\":\"Partner\",\"relationName\":\"PartnerToPartnerDebt\"}],\"dbName\":\"partner_debts\"},\"Safe\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"balance\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"vouchers\",\"kind\":\"object\",\"type\":\"Voucher\",\"relationName\":\"SafeToVoucher\"},{\"name\":\"transfersFrom\",\"kind\":\"object\",\"type\":\"Transfer\",\"relationName\":\"TransferFrom\"},{\"name\":\"transfersTo\",\"kind\":\"object\",\"type\":\"Transfer\",\"relationName\":\"TransferTo\"}],\"dbName\":\"safes\"},\"Transfer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fromSafeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"toSafeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"fromSafe\",\"kind\":\"object\",\"type\":\"Safe\",\"relationName\":\"TransferFrom\"},{\"name\":\"toSafe\",\"kind\":\"object\",\"type\":\"Safe\",\"relationName\":\"TransferTo\"}],\"dbName\":\"transfers\"},\"Voucher\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"safeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"beneficiary\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"linkedRef\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"safe\",\"kind\":\"object\",\"type\":\"Safe\",\"relationName\":\"SafeToVoucher\"},{\"name\":\"unit\",\"kind\":\"object\",\"type\":\"Unit\",\"relationName\":\"UnitToVoucher\"}],\"dbName\":\"vouchers\"},\"Broker\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"brokerDues\",\"kind\":\"object\",\"type\":\"BrokerDue\",\"relationName\":\"BrokerToBrokerDue\"}],\"dbName\":\"brokers\"},\"BrokerDue\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brokerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"broker\",\"kind\":\"object\",\"type\":\"Broker\",\"relationName\":\"BrokerToBrokerDue\"}],\"dbName\":\"broker_dues\"},\"PartnerGroup\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"partners\",\"kind\":\"object\",\"type\":\"PartnerGroupPartner\",\"relationName\":\"PartnerGroupToPartnerGroupPartner\"},{\"name\":\"unitPartnerGroups\",\"kind\":\"object\",\"type\":\"UnitPartnerGroup\",\"relationName\":\"PartnerGroupToUnitPartnerGroup\"}],\"dbName\":\"partner_groups\"},\"PartnerGroupPartner\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"partnerGroupId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"partnerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"percentage\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"partnerGroup\",\"kind\":\"object\",\"type\":\"PartnerGroup\",\"relationName\":\"PartnerGroupToPartnerGroupPartner\"},{\"name\":\"partner\",\"kind\":\"object\",\"type\":\"Partner\",\"relationName\":\"PartnerToPartnerGroupPartner\"}],\"dbName\":\"partner_group_partners\"},\"UnitPartnerGroup\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"partnerGroupId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"unit\",\"kind\":\"object\",\"type\":\"Unit\",\"relationName\":\"UnitToUnitPartnerGroup\"},{\"name\":\"partnerGroup\",\"kind\":\"object\",\"type\":\"PartnerGroup\",\"relationName\":\"PartnerGroupToUnitPartnerGroup\"}],\"dbName\":\"unit_partner_groups\"},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"oldValues\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"newValues\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"audit_logs\"},\"Settings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"settings\"},\"KeyVal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"keyval\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"users\"},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"acknowledged\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"acknowledgedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"acknowledgedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"notifications\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

