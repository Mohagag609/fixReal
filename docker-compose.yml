version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: accounting_postgres
    environment:
      POSTGRES_DB: accounting
      POSTGRES_USER: accounting_user
      POSTGRES_PASSWORD: accounting_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - accounting_network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: accounting_backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://accounting_user:accounting_password@postgres:5432/accounting
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      CORS_ORIGIN: http://localhost:4200
      PORT: 3000
    ports:
      - "3000:3000"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/backups:/app/backups
    depends_on:
      - postgres
    networks:
      - accounting_network
    restart: unless-stopped

  # Frontend Angular
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: accounting_frontend
    environment:
      NODE_ENV: production
      API_URL: http://localhost:3000/api
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - accounting_network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: accounting_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - accounting_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  accounting_network:
    driver: bridge