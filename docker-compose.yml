version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: estate_postgres
    environment:
      POSTGRES_DB: estate_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - estate_network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: estate_backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:password@postgres:5432/estate_management?schema=public
      PORT: 3001
      JWT_SECRET: estate-management-super-secret-jwt-key-2024-production
      JWT_EXPIRES_IN: 7d
      CORS_ORIGIN: http://localhost:4200
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    networks:
      - estate_network
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - /app/node_modules

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: estate_frontend
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - estate_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: estate_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - estate_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  estate_network:
    driver: bridge