version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: accounting-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: accounting_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - accounting-network

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: accounting-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - accounting-network

  # Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: accounting-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:password@postgres:5432/accounting_db?schema=public
      PORT: 4000
    ports:
      - "4000:4000"
    depends_on:
      - postgres
      - redis
    networks:
      - accounting-network
    volumes:
      - ./logs:/app/logs

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: accounting-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - accounting-network

volumes:
  postgres_data:
  redis_data:

networks:
  accounting-network:
    driver: bridge